# START COPY APP

- local_action: command date +%s
  register: timestamp

- file: path={{ item }} state=directory
  with_items:
    - "{{ deploy_root }}"
    - "{{ releases_path }}"

- file: path="{{ releases_path }}/{{ timestamp.stdout }}" state=directory
  register: release_path

# START COPY APP

- copy: src=Gemfile dest={{ release_path.path }}/Gemfile

- copy: src=Gemfile.lock dest={{ release_path.path }}/Gemfile.lock

- copy: src=config.ru dest={{ release_path.path }}/config.ru

- template: src=unicorn.conf.rb dest={{ release_path.path }}/unicorn.conf.rb

# END COPY APP

# BEFORE RESTART

- name: check bundler installed
  shell: gem list bundler -i | grep true
  register: bundler_installed
  ignore_errors: yes

- name: gem install bundler
  shell: gem install bundler
  when: bundler_installed|failed

- name: bundle
  action: shell chdir={{ release_path.path }} bundle
  when: bundler_installed|success
  notify:
    - rbenv rehash

- file: path={{ current_path }} src={{ release_path.path }} state=link

# END RESTART

- name: ensure unicorn running
  raw: "kill -0 $(cat {{ unicorn_pid_path }})"
  register: result
  ignore_errors: yes

- name: restart unicorn
  raw: "kill -HUP $(cat {{ unicorn_pid_path }})"
  when: result|success

- name: start unicorn
  shell: unicorn -D -c {{ current_path }}/unicorn.conf.rb {{ current_path }}/config.ru
  when: result|failed
